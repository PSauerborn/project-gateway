openapi: 3.0.0
info:
  title: Project Gateway API
  description: API used to manage project gateway API
  version: 0.0.1

servers:
  - url: https://main.project-gateway.app
    description: Production API Service

security:
  - ApiKeyAuth: []

tags:
  - name: Gateway Admin API
    description: Micro-service used to control API Gateway

  - name: Identity Provider
    description: Micro-service used as identity provider

  - name: Config Store API
    description: Micro-service used to store config settings for applications

paths:
  /authenticate/health_check:
    get:
      summary: API route used to perform health check on server
      tags:
      - Identity Provider
      responses:
        200:
          description: JSON response containing health check status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'

  /authenticate/token:
    post:
      summary: API route used to obtain access token for API
      tags:
      - Identity Provider
      requestBody:
        description: Raw JSON body containing login details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        200:
          description: JSON response containing access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        400:
          description: JSON response containing access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
        401:
          description: JSON response containing access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        500:
          description: JSON response containing access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'


components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-ApiKey

  schemas:
    HealthCheckResponse:
      properties:
        http_code:
          type: integer
          example: 200
        message:
          type: string
          example: Service running

    UnauthorizedResponse:
      properties:
        success:
          type: boolean
          example: false
        http_code:
          type: integer
          example: 401
        message:
          type: string
          example: Unauthorized

    ForbiddenResponse:
      properties:
        success:
          type: boolean
          example: false
        http_code:
          type: integer
          example: 403
        message:
          type: string
          example: Forbidden

    InvalidRequestResponse:
      properties:
        success:
          type: boolean
          example: false
        http_code:
          type: integer
          example: 400
        message:
          type: string
          example: Invalid request body

    InternalServerErrorResponse:
      properties:
        success:
          type: boolean
          example: false
        http_code:
          type: integer
          example: 500
        message:
          type: string
          example: Internal server error

    LoginRequest:
      properties:
        uid:
          type: string
          example: test-user
        password:
          type: string
          example: test-password

    TokenResponse:
      properties:
        http_code:
          type: integer
          example: 200
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZG1pbiI6ZmFsc2UsImV4cCI6MTYxMzA3Mzk1OCwidWlkIjoidGVzdC11c2VyIn0.HFZ_kfy-sW_4zLc_K-WodLg780FmwC0HYA1K5n6hZxk